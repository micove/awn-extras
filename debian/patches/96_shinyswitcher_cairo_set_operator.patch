diff -Nur -x '*.orig' -x '*~' awn-extras-applets-0.2.6/src/shiny-switcher/shinyswitcherapplet.c awn-extras-applets-0.2.6.new/src/shiny-switcher/shinyswitcherapplet.c
--- awn-extras-applets-0.2.6/src/shiny-switcher/shinyswitcherapplet.c	2008-10-15 18:56:02.000000000 +0200
+++ awn-extras-applets-0.2.6.new/src/shiny-switcher/shinyswitcherapplet.c	2008-10-15 19:09:58.000000000 +0200
@@ -154,14 +154,28 @@
 
 double vp_vscale(Shiny_switcher *shinyswitcher)
 {
-	return  (double)wnck_screen_get_height(shinyswitcher->wnck_screen )/(double)wnck_workspace_get_height(wnck_screen_get_active_workspace(shinyswitcher->wnck_screen) );
-
+	static double cached = 1;
+	double result = cached;
+	WnckWorkspace * space =  wnck_screen_get_active_workspace(shinyswitcher->wnck_screen);
+	if (space)
+	{
+	  result = (double)wnck_screen_get_height(shinyswitcher->wnck_screen) / (double)wnck_workspace_get_height(space);
+	  cached = result;
+	}
+	return result;
 }
 
 double vp_hscale(Shiny_switcher *shinyswitcher)
 {
-	return  (double)wnck_screen_get_width(shinyswitcher->wnck_screen )/(double)wnck_workspace_get_width(wnck_screen_get_active_workspace(shinyswitcher->wnck_screen) );
-
+	static double cached = 1;
+	double result = cached;
+	WnckWorkspace * space =  wnck_screen_get_active_workspace(shinyswitcher->wnck_screen);
+	if (space)
+	{
+	  result = (double)wnck_screen_get_width(shinyswitcher->wnck_screen) / (double)wnck_workspace_get_width(space);
+	  cached = result;
+	}
+	return result;
 }
 
 
@@ -185,6 +199,9 @@
 	shinyswitcher->mini_work_width=shinyswitcher->mini_work_height*shinyswitcher->applet_scale*scr_ratio*
 									(double)wnck_ws_width/(double)wnck_scr_width*vp_vscale(shinyswitcher);
 	shinyswitcher->width=shinyswitcher->mini_work_width*shinyswitcher->cols;
+	g_assert(shinyswitcher->mini_work_height);
+	g_assert(shinyswitcher->mini_work_width);
+	g_assert(shinyswitcher->width);
 }
 
 
@@ -209,6 +226,10 @@
 		
 	gulong wallpaper_xid=wnck_screen_get_background_pixmap(shinyswitcher->wnck_screen);
 	GdkPixmap* wallpaper=gdk_pixmap_foreign_new (wallpaper_xid); 	
+	if (!wallpaper)
+	{
+	  return;
+	}
  	gdk_drawable_set_colormap(wallpaper,shinyswitcher->rgb_cmap);
 	
     shinyswitcher->wallpaper_inactive=gdk_pixmap_new(NULL,shinyswitcher->mini_work_width*vp_hscale(shinyswitcher),shinyswitcher->mini_work_height*vp_vscale(shinyswitcher),32);   //FIXME
@@ -216,28 +237,34 @@
  	gtk_widget_set_app_paintable(widget,TRUE);	          
     gdk_drawable_set_colormap(shinyswitcher->wallpaper_inactive,shinyswitcher->rgba_cmap);       
     cairo_t * destcr=gdk_cairo_create(shinyswitcher->wallpaper_inactive);	
-    cairo_set_operator (destcr, CAIRO_OPERATOR_CLEAR);
+    if (destcr)
+    {
+    cairo_set_operator(destcr, CAIRO_OPERATOR_CLEAR);
     cairo_paint(destcr);
-	gdk_drawable_get_size(wallpaper,&w,&h);
-	cairo_scale(destcr,shinyswitcher->mini_work_width/(double)w*vp_hscale(shinyswitcher),shinyswitcher->mini_work_height/(double)h*vp_vscale(shinyswitcher));
-	gdk_cairo_set_source_pixmap(destcr,wallpaper,0, 0);    
-	cairo_set_operator (destcr, CAIRO_OPERATOR_OVER);		
-	cairo_paint_with_alpha(destcr,shinyswitcher->wallpaper_alpha_inactive);	
-	gtk_widget_destroy(widget);
+    gdk_drawable_get_size(wallpaper, &w, &h);
+    cairo_scale(destcr, shinyswitcher->mini_work_width / (double)w*vp_hscale(shinyswitcher), shinyswitcher->mini_work_height / (double)h*vp_vscale(shinyswitcher));
+    gdk_cairo_set_source_pixmap(destcr, wallpaper, 0, 0);
+    cairo_set_operator(destcr, CAIRO_OPERATOR_OVER);
+    cairo_paint_with_alpha(destcr, shinyswitcher->wallpaper_alpha_inactive);
+    }
+    gtk_widget_destroy(widget);
 
     shinyswitcher->wallpaper_active=gdk_pixmap_new(NULL,shinyswitcher->mini_work_width*vp_hscale(shinyswitcher),shinyswitcher->mini_work_height*vp_vscale(shinyswitcher),32);   //FIXME
     widget=gtk_image_new_from_pixmap(shinyswitcher->wallpaper_active,NULL);  
  	gtk_widget_set_app_paintable(widget,TRUE);	                    
     gdk_drawable_set_colormap(shinyswitcher->wallpaper_active,shinyswitcher->rgba_cmap);       
     destcr=gdk_cairo_create(shinyswitcher->wallpaper_active);	
-    cairo_set_operator (destcr, CAIRO_OPERATOR_CLEAR);
+    if (destcr)
+    {
+    cairo_set_operator(destcr, CAIRO_OPERATOR_CLEAR);
     cairo_paint(destcr);
-	cairo_scale(destcr,shinyswitcher->mini_work_width/(double)w*vp_hscale(shinyswitcher),shinyswitcher->mini_work_height/(double)h*vp_vscale(shinyswitcher));
-	gdk_cairo_set_source_pixmap(destcr,wallpaper,0, 0);    
-	cairo_set_operator (destcr, CAIRO_OPERATOR_OVER);		
-	cairo_paint_with_alpha(destcr,shinyswitcher->wallpaper_alpha_active);	
-	gtk_widget_destroy(widget);
-	cairo_destroy(destcr);
+    cairo_scale(destcr, shinyswitcher->mini_work_width / (double)w*vp_hscale(shinyswitcher), shinyswitcher->mini_work_height / (double)h*vp_vscale(shinyswitcher));
+    gdk_cairo_set_source_pixmap(destcr, wallpaper, 0, 0);
+    cairo_set_operator(destcr, CAIRO_OPERATOR_OVER);
+    cairo_paint_with_alpha(destcr, shinyswitcher->wallpaper_alpha_active);
+    cairo_destroy(destcr);    
+    }
+    gtk_widget_destroy(widget);
 }
 
 
@@ -257,28 +284,34 @@
 	    widget=gtk_image_new_from_pixmap(shinyswitcher->wallpaper_inactive,NULL);
 	 	gtk_widget_set_app_paintable(widget,TRUE);
 		cr=gdk_cairo_create(shinyswitcher->wallpaper_inactive);
-		cairo_set_operator (cr, CAIRO_OPERATOR_CLEAR);
-		cairo_paint(cr);
-		cairo_set_operator (cr, CAIRO_OPERATOR_SOURCE);
-		cairo_set_source_rgba (cr,shinyswitcher->desktop_colour.red, shinyswitcher->desktop_colour.green,
-								shinyswitcher->desktop_colour.blue, shinyswitcher->desktop_colour.alpha);
-		cairo_paint_with_alpha(cr,shinyswitcher->wallpaper_alpha_inactive);
-		gtk_widget_destroy(widget);
-		cairo_destroy(cr);
+		if (cr)
+		{
+		 cairo_set_operator(cr, CAIRO_OPERATOR_CLEAR);
+		 cairo_paint(cr);
+		 cairo_set_operator(cr, CAIRO_OPERATOR_SOURCE);
+		 cairo_set_source_rgba(cr, shinyswitcher->desktop_colour.red, shinyswitcher->desktop_colour.green,
+		                       shinyswitcher->desktop_colour.blue, shinyswitcher->desktop_colour.alpha);
+		 cairo_paint_with_alpha(cr, shinyswitcher->wallpaper_alpha_inactive);
+		 gtk_widget_destroy(widget);
+		 cairo_destroy(cr);
+		 }
 				
 	    shinyswitcher->wallpaper_active=gdk_pixmap_new(NULL,shinyswitcher->mini_work_width*vp_hscale(shinyswitcher),shinyswitcher->mini_work_height*vp_vscale(shinyswitcher),32);   //FIXME
 	    gdk_drawable_set_colormap(shinyswitcher->wallpaper_active,shinyswitcher->rgba_cmap);
 	    widget=gtk_image_new_from_pixmap(shinyswitcher->wallpaper_active,NULL);
 	 	gtk_widget_set_app_paintable(widget,TRUE);
 		cr=gdk_cairo_create(shinyswitcher->wallpaper_active);
-		cairo_set_operator (cr, CAIRO_OPERATOR_CLEAR);
-		cairo_paint(cr);
-		cairo_set_operator (cr, CAIRO_OPERATOR_SOURCE);
-		cairo_set_source_rgba (cr,shinyswitcher->desktop_colour.red, shinyswitcher->desktop_colour.green,
-								shinyswitcher->desktop_colour.blue, shinyswitcher->desktop_colour.alpha);
-		cairo_paint_with_alpha(cr,shinyswitcher->wallpaper_alpha_active);
-		gtk_widget_destroy(widget);
-		cairo_destroy(cr);
+		if (cr)
+		{
+		  cairo_set_operator(cr, CAIRO_OPERATOR_CLEAR);
+		  cairo_paint(cr);
+		  cairo_set_operator(cr, CAIRO_OPERATOR_SOURCE);
+		  cairo_set_source_rgba(cr, shinyswitcher->desktop_colour.red, shinyswitcher->desktop_colour.green,
+		                        shinyswitcher->desktop_colour.blue, shinyswitcher->desktop_colour.alpha);
+		  cairo_paint_with_alpha(cr, shinyswitcher->wallpaper_alpha_active);
+		  cairo_destroy(cr);      
+		 }
+		  gtk_widget_destroy(widget);
 
 	}
 }	
